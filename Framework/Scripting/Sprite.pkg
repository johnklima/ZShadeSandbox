$#include "AISprite.h"

class Sprite
{
	Sprite();
	~Sprite();

	void CreateTexture(string base_path, string windowName, int screenWidth, int screenHeight);

	void say1(string text);
	void say2(string text, int font_size);
	void say3(string text, int x, int y, int font_size);
	void say4(string text, int r, int g, int b, int font_size);
	void say5(string text, int x, int y, int r, int g, int b, int font_size);
	
	void say_stop1(string text);
	void say_stop2(string text, int font_size);
	void say_stop3(string text, int x, int y, int font_size);
	void say_stop4(string text, int r, int g, int b, int font_size);
	void say_stop5(string text, int x, int y, int r, int g, int b, int font_size);

	void ClearAnimationList();
	void AddAnimationSequence(Animation2D* sequence);
	void SetSequence(int i);
	void NullSequence();
	Animation2D* CurrentSequenceExists();
	int GetCurrentFrameIndex();
	bool IsCurrentSequenceOnLastFrame();
	void SetCurrentSequenceNotOnLastFrame();
	void AddAnimation();
	
	float& MinimumAttackDistance();
	float MinimumAttackDistance() const;
	bool WithinAttackDistance(int spriteID);
	bool WithinAttackDistance(AISprite* sprite);
	void SetWanderingRadius(float value);
	void SetWanderingDistance(float value);
	void SetWanderingJitter(float value);
	void SetMinDetectionBoxLength(float value);
	void SetWaypointSeekDist(float value);
	void SetMaxFleeDistance(float value);
	void SetWeightSeek(float value);
	void SetWeightFlee(float value);
	void SetWeightArrive(float value);
	void SetWeightSpriteAvoidance(float value);
	void SetWeightSeparation(float value);
	void SetWeightAlignment(float value);
	void SetWeightCohesion(float value);
	void SetWeightWander(float value);
	void SetWeightFollowPath(float value);
	void SetWeightPursueTarget(float value);
	void SetWeightEvadeTarget(float value);
	void SetWeightInterpose(float value);
	void SetWeightHide(float value);
	void SetWeightOffsetPursuit(float value);
	void SetCanSeek(bool value);
	void SetCanFlee(bool value);
	void SetCanArrive(bool value);
	void SetCanAvoidSprites(bool value);
	void SetCanFlockSeparation(bool value);
	void SetCanFlockAlignment(bool value);
	void SetCanFlockCohesion(bool value);
	void SetCanWander(bool value);
	void SetCanFollowPath(bool value);
	void SetCanPursueTarget(bool value);
	void SetCanEvadeTarget(bool value);
	void SetCanInterpose(bool value);
	void SetCanHide(bool value);
	void SetCanOffsetPursuit(bool value);
	void SetWaypointSystem(ZShadeSandboxAI::WaypointSystem* waypoints);
	void SetEvader(AISprite* sprite);
	void SetPursuer(AISprite* sprite);
	void SetHideTarget(AISprite* sprite);
	void SetSpriteA(AISprite* sprite);
	void SetSpriteB(AISprite* sprite);
	void SetLeader(AISprite* sprite);
	void SetLeaderOffset(ZShadeSandboxMath::XMMath3 point);
	void SetTargetPoint(ZShadeSandboxMath::XMMath3 point);
	void SetTargetDecelerationType(int type);
	float WanderingRadius() const;
	float WanderingDistance() const;
	float WanderingJitter() const;
	float MinDetectionBoxLength() const;
	float WaypointSeekDist() const;
	float MaxFleeDistance() const;
	float WeightSeek() const;
	float WeightFlee() const;
	float WeightArrive() const;
	float WeightObstacleAvoidance() const;
	float WeightSeparation() const;
	float WeightAlignment() const;
	float WeightCohesion() const;
	float WeightWander() const;
	float WeightFollowPath() const;
	float WeightPursueTarget() const;
	float WeightEvadeTarget() const;
	float WeightInterpose() const;
	float WeightHide() const;
	float WeightOffsetPursuit() const;
	bool CanSeek() const;
	bool CanFlee() const;
	bool CanArrive() const;
	bool CanAvoidSprites() const;
	bool CanFlockSeparation() const;
	bool CanFlockAlignment() const;
	bool CanFlockCohesion() const;
	bool CanWander() const;
	bool CanFollowPath() const;
	bool CanPursueTarget() const;
	bool CanEvadeTarget() const;
	bool CanInterpose() const;
	bool CanHide() const;
	bool CanOffsetPursuit() const;
	ZShadeSandboxAI::WaypointSystem* WaypointSystem() const;
	AISprite* Evader() const;
	AISprite* Pursuer() const;
	AISprite* HideTarget() const;
	AISprite* SpriteA() const;
	AISprite* SpriteB() const;
	AISprite* Leader() const;
	float LeaderOffsetX() const;
	float LeaderOffsetY() const;
	float LeaderOffsetZ() const;
	float TargetPointX() const;
	float TargetPointY() const;
	float TargetPointZ() const;
	int TargetDecelerationType() const;
	int FindNearestSpriteInMap();
	void AddAllNearestSpritesToCollection();
	int AmountOfSpritesInRange();
	int FindNearestSpriteIDInCollection(int i);
	void CreateWaypointSystem();
	int WaypointSystemSize();
	bool WaypointSystemEmpty();
	void ClearWaypoints();
	void RemoveWaypoint(ZShadeSandboxMath::XMMath3 waypoint);
	void AddWaypoint(ZShadeSandboxMath::XMMath3 waypoint);
	float CurrentWaypointX();
	float CurrentWaypointY();
	float CurrentWaypointZ();
	void SetNextWaypoint();
	bool WaypointSystemFinished();
	void SetWaypointSystemCanLoop(bool value);
	bool WaypointSystemCanLoop() const;
	int CurrentWaypointIndex() const;
	
	bool MoveSpriteUp();
	bool MoveSpriteDown();
	bool MoveSpriteLeft();
	bool MoveSpriteRight();

	void SetMoveSpriteUp(bool up);
	void SetMoveSpriteDown(bool down);
	void SetMoveSpriteLeft(bool left);
	void SetMoveSpriteRight(bool right);

	void MakeTemporarilyInvincible();

	bool IsHurt();

	void SetCollidedSprite(Sprite* spr);
	Sprite* GetCollidedSprite();
	
	int& OldSpeed();
	int OldSpeed();

	bool& CanDisplayHardbox();
	bool CanDisplayHardbox() const;
	
	int& Width();
	int Width() const;
	
	int& Height();
	int Height() const;
	
	int& DirectionMoved();
	int DirectionMoved() const;
	
	bool& Attacking();
	bool Attacking() const;
	
	bool& IsPlayer();
	bool IsPlayer() const;
	
	bool& IsDisplaySprite();
	bool IsDisplaySprite() const;
	
	int& ID();
	int ID() const;
	
	float& X();
	float X() const;
	
	float& Y();
	float Y() const;
	
	int& Vision();
	int Vision() const;
	
	int& Depth();
	int Depth();
	
	string& BaseTextureFilename();
	string BaseTextureFilename() const;
	
	int& IsHard();
	int IsHard() const;
	
	string& AnimationProfileName();
	string AnimationProfileName() const;
	
	int& HP();
	int HP() const;
	
	int& HPMax();
	int HPMax() const;
	
	int& Gold();
	int Gold() const;

	int& Strength();
	int Strength() const;
	
	float& Speed();
	float Speed() const;
	
	float& MaxSpeed();
	float MaxSpeed() const;
	
	int& Mana();
	int Mana() const;
	
	int& Defense();
	int Defense() const;
	
	int& Experience();
	int Experience() const;
	
	int& Level();
	int Level() const;
	
	bool& IsNoHit();
	bool IsNoHit() const;
	
	bool& IsTouch();
	bool IsTouch() const;
	
	bool& IsTouched();
	bool IsTouched() const;
	
	string& Script();
	string Script() const;
	
	bool& CanTeleport();
	bool CanTeleport() const;
	
	string& TeleportMapName();
	string TeleportMapName() const;
	
	int& TeleportX();
	int TeleportX() const;
	
	int& TeleportY();
	int TeleportY() const;
	
	bool& IsBackgroundSprite();
	bool IsBackgroundSprite() const;
	
	bool& IsEntitySprite();
	bool IsEntitySprite() const;
	
	bool& IsInvisibleSprite();
	bool IsInvisibleSprite() const;
	
	int& DefaultSequence();
	int DefaultSequence() const;
	
	int& AnimationSpeed();
	int AnimationSpeed() const;
	
	int& DamageAmount();
	int DamageAmount() const;
	
	string& Name();
	string Name() const;
	
	bool& Moving();
	bool Moving() const;
	
	bool& Thinking();
	bool Thinking() const;
	
	bool& Talking();
	bool Talking() const;
	
	bool& IsDying();
	bool IsDying() const;
	
	bool& IsHit();
	bool IsHit() const;
	
	bool& Attacked();
	bool Attacked() const;
	
	bool& Targeted();
	bool Targeted() const;
	
	string& CollideMsg();
	string CollideMsg() const;
	
	string& InventoryMessage();
	string InventoryMessage() const;
	
	bool& PlatformerSprite();
	bool PlatformerSprite() const;
	
	bool& AlwaysSeenByPlayer();
	bool AlwaysSeenByPlayer() const;
};